services:
  backend:
    container_name: "${PROJECT_TAG:-app}-backend"
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "0.0.0.0:${BACKEND_PORT:-3500}:3500"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: "${PROJECT_TAG:-app}-frontend"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "0.0.0.0:${FRONTEND_PORT:-3000}:3000"

  postgres:
    image: postgres:16-alpine
    container_name: "${PROJECT_TAG:-app}-postgres"
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "127.0.0.1:${POSTGRES_PORT:-5432}:5432/tcp"
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    healthcheck:
      test:
        ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
      interval: 120s
      timeout: 5s
      retries: 2
      start_period: 30s

volumes:
  postgres-data:
